import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import pymysql
import requests
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = 'vk1.a.9gh-11AkqZOuknWqXQ8fOJs3XI0f741RrsO18Wog4mKaOF1FeC56WYh7-D_l2mPXaQ7ITq3YJQiWwas5R3oUW_3v4XCIsG5VJqEVIhtce0Y-TMxMG5HRU5dV7vdRaB_pcpDdxuY5epZKj3xX_AyFvHz3JvL81EUZjVYmej2Di7aW3RNB-ZxPLH7zR6VwwQT4RXdTaX20kjVQbKtSgANSEg'
ADMIN_IDS = [
    570718317, 291170303, 242662322
]  # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ 291170303 - –¢—ë–º–∞, 570718317 - –ú–∞—Ä–∫, 242662322 - –°–µ—Ä–≥–µ–π

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MySQL
# DB_HOST = '79.137.195.165'
# DB_USER = 'gs2391'
# DB_PASSWORD = '123456Alko!'
# DB_NAME = 'gs2391'
DB_HOST = '51.91.215.125'
DB_USER = 'gs279651'
DB_PASSWORD = '123456Alko!'
DB_NAME = 'gs279651'

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
db = pymysql.connect(host=DB_HOST,
                     user=DB_USER,
                     password=DB_PASSWORD,
                     database=DB_NAME,
                     charset='utf8mb4')

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VK API
vk_session = vk_api.VkApi(token=TOKEN)
vk = vk_session.get_api()
longpoll = VkLongPoll(vk_session)

# –°–æ—Å—Ç–æ—è–Ω–∏—è
admin_states = {}
user_states = {}
# –£–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω
COUNTRIES = ["–†–æ—Å—Å–∏—è", "–ò–º–ø–æ—Ä—Ç–Ω–æ–µ"]


def send_message(user_id,
     message,
     buttons=None,
     attachment=None,
     add_back=False):
    MAX_MESSAGE_LENGTH = 4096  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ

    if buttons:
        keyboard = VkKeyboard(one_time=False)
        for row in buttons:
            for index, button in enumerate(row):
                if index % 4 == 0 and index != 0:
                    keyboard.add_line()
                keyboard.add_button(button['action']['label'],
                                    color=VkKeyboardColor.PRIMARY)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ add_back=True
        if add_back:
            keyboard.add_line()
            keyboard.add_button("–ù–∞–∑–∞–¥", color=VkKeyboardColor.NEGATIVE)
        keyboard = keyboard.get_keyboard()
    else:
        keyboard = VkKeyboard.get_empty_keyboard()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ –¥–ª–∏–Ω—É
    if len(message) <= MAX_MESSAGE_LENGTH:
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ —Ü–µ–ª–∏–∫–æ–º
        vk.messages.send(user_id=user_id,
                 message=message,
                 random_id=0,
                 keyboard=keyboard,
                 attachment=attachment)
    else:
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, —Ä–∞–∑–±–∏–≤–∞–µ–º –µ–≥–æ –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ –æ—á–µ—Ä–µ–¥–∏
        for i in range(0, len(message), MAX_MESSAGE_LENGTH):
            part = message[i:i + MAX_MESSAGE_LENGTH]
            vk.messages.send(user_id=user_id,
                 message=part,
                 random_id=0,
                 keyboard=keyboard,
                 attachment=attachment)



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä VK –∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –µ–≥–æ ID
def upload_photo(photo_url):
    upload_url = vk.photos.getMessagesUploadServer()["upload_url"]
    photo_data = requests.get(photo_url).content
    response = requests.post(upload_url,
                             files={
                                 "photo":
                                 ("photo.jpg", photo_data, "image/jpeg")
                             }).json()
    saved_photo = vk.photos.saveMessagesPhoto(photo=response["photo"],
                                              server=response["server"],
                                              hash=response["hash"])[0]
    return f'photo{saved_photo["owner_id"]}_{saved_photo["id"]}'


def add_beer_stage(user_id, message, attachments=None):
    try:
        state = admin_states.get(user_id)

        if state is None:
            try:
                # –†–∞–∑–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                args = message.replace("/addbeer ", "").split('|')
                if len(args) < 9:
                    send_message(
                        user_id, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
                        "/addbeer üç∫ –ù–∞–∑–≤–∞–Ω–∏–µ | üè∑ –ö–∞—Ç–µ–≥–æ—Ä–∏—è | üîñ –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è | üìè –û–±—ä–µ–º (–ª) | üçÉ –ê–ª–∫–æ–≥–æ–ª—å (%) | üåç –°—Ç—Ä–∞–Ω–∞ | üí∞ –¶–µ–Ω–∞ (—Ä—É–±.) | ‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ | üñº URL –§–æ—Ç–æ"
                    )
                    admin_states[user_id] = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                    return

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                name, category, subcategory, volume, alcohol, country, price, description, photo_url = args

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                admin_states[user_id] = {
                    "name": name,
                    "category": category,
                    "subcategory": subcategory,
                    "volume": volume,
                    "alcohol": alcohol,
                    "country": country,
                    "price": price,
                    "description": description,
                    "photo_url": photo_url,
                    "stage": "awaiting_photo"
                }

                # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ
                try:
                    photo_id = upload_photo(
                        photo_url)  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –∏ –ø–æ–ª—É—á–∞–µ–º photo_id
                except Exception as upload_error:
                    send_message(user_id,
                                 f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ: {upload_error}")
                    admin_states[user_id] = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                    return

                # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                try:
                    with db.cursor() as cursor:
                        sql = """INSERT INTO beers (name, category, type, volume, alcohol, country, price, description, photo_url)
                                 VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)"""
                        cursor.execute(
                            sql,
                            (name, category, subcategory, volume,
                             float(alcohol), country, float(price),
                             description, photo_id))  # –ò—Å–ø–æ–ª—å–∑—É–µ–º photo_id
                        db.commit()

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    send_message(
                        user_id,
                        f"üéâ –ü–∏–≤–æ '{name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –±–∞–∑—É!\n\n"
                        f"üç∫ –ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
                        f"üè∑ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
                        f"üîñ –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {subcategory}\n"
                        f"üìè –û–±—ä–µ–º: {volume} –ª\n"
                        f"üçÉ –ê–ª–∫–æ–≥–æ–ª—å: {alcohol}%\n"
                        f"üåç –°—Ç—Ä–∞–Ω–∞: {country}\n"
                        f"üí∞ –¶–µ–Ω–∞: {price} —Ä—É–±.\n"
                        f"‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {description}\n"
                        f"üñº –§–æ—Ç–æ:\n",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º photo_id –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                        attachment=photo_id)

                    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—é
                    admin_states[user_id] = None

                except Exception as db_error:
                    send_message(
                        user_id,
                        f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {db_error}")
                    admin_states[user_id] = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                    return

            except Exception as e:
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
                send_message(user_id,
                             f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã: {e}")
                admin_states[user_id] = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    except Exception as fatal_error:
        # –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–µ—Ä—å–µ–∑–Ω–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º, –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞
        send_message(user_id, f"‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {fatal_error}")
        admin_states[user_id] = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–∏–≤–∞ –ø–æ ID
def delete_beer_by_id(user_id, beer_id):
    try:
        with db.cursor() as cursor:
            # –í—ã–ø–æ–ª–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ø–∏–≤–∞ –ø–æ ID
            cursor.execute("DELETE FROM beers WHERE id = %s", (beer_id, ))
            db.commit()

        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∏–≤–∞
        send_message(
            user_id, f"üóëÔ∏è –ü–∏–≤–æ —Å ID {beer_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!\n"
            "üçª –ù–∞–¥–µ–µ–º—Å—è, –≤—ã –¥–æ–±–∞–≤–∏—Ç–µ —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ —Å–∫–æ—Ä–æ!")
    except Exception as e:
        send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–∏–≤–∞: {e}")
        admin_states.pop(user_id, None)  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        return

def view_all_beers(user_id):
    with db.cursor() as cursor:
        cursor.execute(
            "SELECT id, name, category, type, price, country FROM beers")
        beers = cursor.fetchall()

    if beers:
        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–∏–≤–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∞ —Ç–∞–∫–∂–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
        country_category_data = {}

        for beer in beers:
            beer_id, name, category, beer_type, price, country = beer

            # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö: –°—Ç—Ä–∞–Ω–∞ -> –ö–∞—Ç–µ–≥–æ—Ä–∏—è -> –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è -> –ü–∏–≤–æ
            if country not in country_category_data:
                country_category_data[country] = {}
            if category not in country_category_data[country]:
                country_category_data[country][category] = {}
            if beer_type not in country_category_data[country][category]:
                country_category_data[country][category][beer_type] = []

            # –î–æ–±–∞–≤–ª—è–µ–º ID –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏–≤–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é
            country_category_data[country][category][beer_type].append((beer_id, name))

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏—Ç–æ–≥–æ–º –ø–æ —Å—Ç—Ä–∞–Ω–∞–º, –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        total_beers = 0
        final_message = "üçª –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –ø–∏–≤–∞:\n\n"

        for country, categories in country_category_data.items():
            # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–µ—Ä–µ–¥ –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–æ–π
            final_message += "-----------------------------------\n"
            final_message += f"üåç –°—Ç—Ä–∞–Ω–∞: {country}\n\n"
            for category, types in categories.items():
                final_message += f"  üìò –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
                for beer_type, beers in types.items():
                    beer_count = len(beers)
                    total_beers += beer_count
                    # –ù–∞–∑–≤–∞–Ω–∏—è –ø–∏–≤–∞ –ø–µ—Ä–µ—á–∏—Å–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    final_message += (f"    üîñ –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {beer_type} "
                                      f"(–≤—Å–µ–≥–æ {beer_count}):\n")
                    final_message += "".join(
                        [f"      ----- ID: {beer_id} | {name}\n" for beer_id, name in beers])

        final_message += f"\nüç∫ –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ —Å–æ—Ä—Ç–æ–≤ –ø–∏–≤–∞: {total_beers}"

        send_message(user_id, final_message)
    else:
        send_message(user_id, "‚ùå –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∏–≤.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∏–≤–µ –ø–æ ID —Å —Ñ–æ—Ç–æ
def check_beer_by_id(user_id, beer_id):
    with db.cursor() as cursor:
        cursor.execute(
            "SELECT name, category, type, volume, alcohol, country, price, description, photo_url FROM beers WHERE id = %s",
            (beer_id, ))
        beer = cursor.fetchone()

    if beer:
        name, category, beer_type, volume, alcohol, country, price, description, photo_url = beer
        beer_info = (f"üç∫ –ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
                     f"üè∑ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
                     f"üîñ –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {beer_type}\n"
                     f"üì¶ –û–±—ä–µ–º: {volume} –ª\n"
                     f"üç∑ –ê–ª–∫–æ–≥–æ–ª—å: {alcohol}%\n"
                     f"üåç –°—Ç—Ä–∞–Ω–∞: {country}\n"
                     f"üí∞ –¶–µ–Ω–∞: {price} —Ä—É–±.\n"
                     f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {description}\n")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ photo_url –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–∫ attachment
        attachment = photo_url if photo_url else None
        send_message(user_id, beer_info, attachment=attachment)
    else:
        send_message(user_id, "‚ùå –ü–∏–≤–æ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def admin_help(user_id):
    help_text = (
        "üë®‚Äçüíº –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n"
        "‚ûï /addbeer –ù–∞–∑–≤–∞–Ω–∏–µ | –ö–∞—Ç–µ–≥–æ—Ä–∏—è | –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è | –û–±—ä–µ–º | –ê–ª–∫–æ–≥–æ–ª—å | –°—Ç—Ä–∞–Ω–∞ | –¶–µ–Ω–∞ | –û–ø–∏—Å–∞–Ω–∏–µ | URL_—Ñ–æ—Ç–æ ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –ø–∏–≤–æ\n"
        "üóë /deletebeer ID ‚Äî —É–¥–∞–ª–∏—Ç—å –ø–∏–≤–æ –ø–æ ID\n"
        "üìã /viewall ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∏–≤\n"
        "üîç /checkbeer ID ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∏–≤–µ –ø–æ ID\n"
        "üìù /searchbeer –ù–∞–∑–≤–∞–Ω–∏–µ ‚Äî –Ω–∞–π—Ç–∏ –ø–∏–≤–æ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n"
        "‚ùì /help ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n")
    send_message(user_id, help_text)


def admins_list(user_id):
    admins = [{
        "name": "@id570718317 | –í–ª–∞–¥–∏—Å–ª–∞–≤ –ú–∏—Ä–æ–Ω–æ–≤",
        "position": "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ 1"
    }, {
        "name": "@id291170303 | –ê—Ä—Ç—ë–º –ó–∏–º–Ω—É—Ö–æ–≤",
        "position": "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ 2"
    }, {
        "name": "@id242662322 | –°–µ—Ä–≥–µ–π –°–∏–º—É–∫–æ–≤",
        "position": "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ 3"
    }]

    message = "üëë –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n"

    for admin in admins:
        message += f"{admin['name']} - {admin['position']}\n"

    send_message(user_id, message)


def send_buttons(user_id, text, button_labels, add_back=False):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏, –≤–∫–ª—é—á–∞—è –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥', –µ—Å–ª–∏ add_back=True."""
    buttons = [[{
        "action": {
            "label": label
        }
    } for label in row] for row in button_labels]
    send_message(user_id, text, buttons=buttons, add_back=add_back)


#–¢–ï–°–¢–ò–ú
def search_beer_by_name(user_id, search_term):
    """–ò—â–µ—Ç –ø–∏–≤–æ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    with db.cursor() as cursor:
        cursor.execute(
            "SELECT id, name, category, type, price, country, photo_url FROM beers WHERE name LIKE %s",
            (f"%{search_term}%", ))
        beers = cursor.fetchall()

    if beers:
        for beer in beers:
            beer_id, name, category, beer_type, price, country, photo_url = beer
            message = (f"üÜî ID: {beer_id}\n"
                       f"üç∫ –ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
                       f"üè∑ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
                       f"üîñ –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {beer_type}\n"
                       f"üåç –°—Ç—Ä–∞–Ω–∞: {country}\n"
                       f"üí∞ –¶–µ–Ω–∞: {price} —Ä—É–±.\n")
            attachment = photo_url if photo_url else None
            send_message(user_id, message, attachment=attachment)
    else:
        send_message(user_id, "‚ùå –ü–∏–≤–æ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞
def send_country_buttons(user_id):
    send_buttons(
        user_id,
        "üçª –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∏—Ä –ø–∏–≤–Ω—ã—Ö –≤–∫—É—Å–æ–≤! üåç\n\n–ò–∑ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–∏–≤–æ? üá©üá™üáßüá™üá∫üá∏\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É, –∏ –º—ã –ø–æ–¥–±–µ—Ä–µ–º –¥–ª—è –≤–∞—Å –ª—É—á—à–∏–µ —Å–æ—Ä—Ç–∞! üç∫",
        [["–†–æ—Å—Å–∏—è", "–ò–º–ø–æ—Ä—Ç–Ω–æ–µ"]])


def send_category_buttons(user_id):
    send_buttons(user_id,
                 "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–∏–≤–∞ üç∫:",
                 [["–°–≤–µ—Ç–ª–æ–µ", "–¢—ë–º–Ω–æ–µ"], ["–Ø–Ω—Ç–∞—Ä–Ω–æ–µ", "–ó–æ–ª–æ—Ç–∏—Å—Ç–æ–µ"]],
                 add_back=True)


def send_subcategory_buttons(user_id, category):
    country = user_states[user_id]["country"]
    with db.cursor() as cursor:
        # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –∏–º–ø–æ—Ä—Ç–Ω–æ–≥–æ –ø–∏–≤–∞: —Å—Ç—Ä–∞–Ω–∞ != "–†–æ—Å—Å–∏—è"
        if country == "–ò–º–ø–æ—Ä—Ç–Ω–æ–µ":
            cursor.execute(
                "SELECT DISTINCT type FROM beers WHERE category = %s AND country != %s",
                (category, '–†–æ—Å—Å–∏—è'))
        else:
            # –î–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –ø–∏–≤–∞ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ
            cursor.execute(
                "SELECT DISTINCT type FROM beers WHERE category = %s AND country = %s",
                (category, country))
        subcategories = cursor.fetchall()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
    if subcategories:
        send_buttons(user_id,
                     "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–∏–≤–∞ üçª:",
                     [[sub[0] for sub in subcategories]],
                     add_back=True)
    else:
        send_message(
            user_id,
            "–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é.")
        user_states[user_id]["stage"] = "awaiting_category"


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
def handle_back(user_id, user_stage):
    stages = {
        "awaiting_category": ("awaiting_country", send_country_buttons),
        "awaiting_subcategory": ("awaiting_category", send_category_buttons),
        "awaiting_beer": ("awaiting_subcategory", send_subcategory_buttons)
    }
    if user_stage in stages:
        new_stage, send_func = stages[user_stage]
        send_func(user_id)
        user_states[user_id]["stage"] = new_stage


def handle_admin_commands(user_id, message, attachments=None):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."""
    if message.startswith("/addbeer"):
        add_beer_stage(user_id, message)
    elif attachments:
        add_beer_stage(user_id, "", attachments)
    elif message.startswith("/deletebeer"):
        try:
            beer_id = int(message.split()[1])
            delete_beer_by_id(user_id, beer_id)
        except (IndexError, ValueError):
            send_message(user_id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
    elif message == "/viewall":
        view_all_beers(user_id)
    elif message.startswith("/checkbeer"):
        try:
            beer_id = int(message.split()[1])
            check_beer_by_id(user_id, beer_id)
        except (IndexError, ValueError):
            send_message(user_id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.")
    elif message == "/help":
        admin_help(user_id)
    elif message == "/admins":
        admins_list(user_id)
    elif message.startswith("/searchbeer"):
        # –ò—â–µ–º –ø–∏–≤–æ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
        search_term = message.replace("/searchbeer ", "").strip()
        search_beer_by_name(user_id, search_term)


# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞
for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW and event.to_me:
        user_id = event.user_id
        message = event.text.strip(
        )  #.lower() –¥–æ–±–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–≥–æ –ø–∏–≤–∫–∞

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if message == "–Ω–∞–∑–∞–¥":
            user_stage = user_states.get(user_id, {}).get("stage")
            handle_back(user_id, user_stage)
            continue

        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        greetings = {
            "–Ω–∞—á–∞—Ç—å", "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "—Å—Ç–∞—Ä—Ç", "–ø—Ä–∏–≤–µ—Ç", "–ü—Ä–∏–≤–µ—Ç", "–ù–∞—á–∞—Ç—å",
            "–°—Ç–∞—Ä—Ç", "–ú–µ–Ω—é", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–º–µ–Ω—é"
        }
        if message in greetings:
            send_buttons(
                user_id,
                "üçª –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∏—Ä –ø–∏–≤–Ω—ã—Ö –≤–∫—É—Å–æ–≤! üåç\n\n–ò–∑ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–∏–≤–æ? üá©üá™üáßüá™üá∫üá∏\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É, –∏ –º—ã –ø–æ–¥–±–µ—Ä–µ–º –¥–ª—è –≤–∞—Å –ª—É—á—à–∏–µ —Å–æ—Ä—Ç–∞! üç∫",
                [["–†–æ—Å—Å–∏—è", "–ò–º–ø–æ—Ä—Ç–Ω–æ–µ"]])
            user_states[user_id] = {"stage": "awaiting_country"}
            continue

        # –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if user_id in ADMIN_IDS:
            handle_admin_commands(user_id, message, event.attachments)
            continue
        # –≠—Ç–∞–ø—ã –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        stage = user_states.get(user_id, {}).get("stage")

        # –≠—Ç–∞–ø: –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã
        if stage == "awaiting_country":
            if message.capitalize() in ["–†–æ—Å—Å–∏—è", "–ò–º–ø–æ—Ä—Ç–Ω–æ–µ"]:
                user_states[user_id] = {
                    "country": message.capitalize(),
                    "stage": "awaiting_category"
                }
                send_buttons(
                    user_id,
                    f"üéâ –í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç—Ä–∞–Ω—É: {message.capitalize()} üåç\n\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–∏–≤–∞ üç∫:",
                    [["–°–≤–µ—Ç–ª–æ–µ", "–¢—ë–º–Ω–æ–µ"], ["–Ø–Ω—Ç–∞—Ä–Ω–æ–µ", "–ó–æ–ª–æ—Ç–∏—Å—Ç–æ–µ"]],
                    add_back=True)
            else:
                send_message(user_id,
                             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ: –†–æ—Å—Å–∏—è –∏–ª–∏ –ò–º–ø–æ—Ä—Ç–Ω–æ–µ.")
            continue

        # –≠—Ç–∞–ø: –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        elif stage == "awaiting_category":
            category = message.capitalize()
            if category in ["–°–≤–µ—Ç–ª–æ–µ", "–¢—ë–º–Ω–æ–µ", "–Ø–Ω—Ç–∞—Ä–Ω–æ–µ", "–ó–æ–ª–æ—Ç–∏—Å—Ç–æ–µ"]:
                user_states[user_id]["category"] = category
                user_states[user_id]["stage"] = "awaiting_subcategory"

                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                send_message(
                    user_id,
                    f"üéâ –í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {category} üç∫\n\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–∏–≤–∞ üçª:"
                )

                # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –ë–î –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã
                country = user_states[user_id]["country"]
                with db.cursor() as cursor:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω–æ –ª–∏ "–ò–º–ø–æ—Ä—Ç–Ω–æ–µ" (–≤—Å–µ —Å—Ç—Ä–∞–Ω—ã, –∫—Ä–æ–º–µ –†–æ—Å—Å–∏–∏)
                    if country == "–ò–º–ø–æ—Ä—Ç–Ω–æ–µ":
                        cursor.execute(
                            "SELECT DISTINCT type FROM beers WHERE category = %s AND country != %s",
                            (category, '–†–æ—Å—Å–∏—è'))
                    else:
                        # –ò–Ω–∞—á–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã
                        cursor.execute(
                            "SELECT DISTINCT type FROM beers WHERE category = %s AND country = %s",
                            (category, country))
                    subcategories = cursor.fetchall()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                if subcategories:
                    send_buttons(user_id,
                                 "–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏:",
                                 [[sub[0] for sub in subcategories]],
                                 add_back=True)
                else:
                    send_message(
                        user_id,
                        "–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é."
                    )
                    user_states[user_id]["stage"] = "awaiting_category"
            else:
                send_message(
                    user_id,
                    "–í—ã–±–µ—Ä–∏—Ç–µ: –°–≤–µ—Ç–ª–æ–µ, –¢—ë–º–Ω–æ–µ, –Ø–Ω—Ç–∞—Ä–Ω–æ–µ –∏–ª–∏ –ó–æ–ª–æ—Ç–∏—Å—Ç–æ–µ.")
            continue

        # –≠—Ç–∞–ø: –í—ã–±–æ—Ä –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        elif stage == "awaiting_subcategory":
            subcategory = message.capitalize()
            country = user_states[user_id]["country"]
            category = user_states[user_id]["category"]

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏–≤–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            with db.cursor() as cursor:
                # –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∞ "–ò–º–ø–æ—Ä—Ç–Ω–æ–µ", –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω—ã, –∫—Ä–æ–º–µ –†–æ—Å—Å–∏–∏
                if country == "–ò–º–ø–æ—Ä—Ç–Ω–æ–µ":
                    cursor.execute(
                        "SELECT name, price, volume, description, alcohol, photo_url FROM beers WHERE category = %s AND type = %s AND country != %s",
                        (category, subcategory, '–†–æ—Å—Å–∏—è'))
                else:
                    # –î–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤—ã–±–∏—Ä–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å—Ç—Ä–∞–Ω—É
                    cursor.execute(
                        "SELECT name, price, volume, description, alcohol, photo_url FROM beers WHERE category = %s AND type = %s AND country = %s",
                        (category, subcategory, country))
                beers = cursor.fetchall()

            if beers:
                for name, price, volume, description, alcohol, photo_url in beers:
                    text = (f"üç∫ {name}\n"
                            f"üìè –û–±—ä–µ–º: {volume} –ª\n"
                            f"üí∞ –¶–µ–Ω–∞: {price} —Ä—É–±.\n"
                            f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {description}\n"
                            f"ü•Ç –ê–ª–∫–æ–≥–æ–ª—å: {alcohol}%")
                    send_message(user_id,
                                 text,
                                 attachment=photo_url if photo_url else None)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ –ø–∏–≤–∞
                send_buttons(
                    user_id,
                    f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é: {subcategory} üçª\n–•–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏?",
                    [["–ù–∞–∑–∞–¥"]])
            else:
                send_message(
                    user_id,
                    f"–ü–∏–≤–æ –≤ '{category}' –∏ '{subcategory}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

            continue
